version: "3"

volumes:
  style_icon_data: { }
  style_icon_data_backups: { }
  style_icon_elasticsearch_data: { }


services:
  django:
    build:
      context: .
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    environment:
      - DB_HOST=db
      - DB_NAME=style-icon
      - DB_USER=style-icon
      - DB_PASS=style-icon
    depends_on:
      - db
      - elastic_search
    networks:
      style-icon_backend_network:
        aliases:
          - style-icon-django
      default:
    links:
      - db
      - redis
      - elastic_search

    stdin_open: true
    tty: true

  db:
    image: postgres:12.0-alpine
    volumes:
      - style_icon_data:/var/lib/style-icon/data/
    environment:
      - POSTGRES_USER=style-icon
      - POSTGRES_PASSWORD=style-icon
      - POSTGRES_DB=style-icon

  redis:
    image: redis:6.2-alpine

  elastic_search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: style-icon_elastic_search
    environment:
      - node.name=style-icon_elastic_search
      - cluster.name=style-icon_es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - style_icon_elasticsearch_data:/usr/share/style-icon/elasticsearch/data
    ports:
      - 9200:9200

networks:
  style-icon_backend_network:
    driver: bridge
